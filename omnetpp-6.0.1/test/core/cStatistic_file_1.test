%description:
Test saveToFile()/loadFromFile() for various histogram classes.

%activity:
int numCells = 10;
int numFirstVals = 100;
double rangeExtFactor = 1.3;

cHistogram hist("Histogram");
cPSquare psquare("PSquare", numCells);
cKSplit ksplit("K-Split");

hist.setRange(0.0, NAN); hist.setNumPrecollectedValues(numFirstVals); hist.setRangeExtensionFactor(rangeExtFactor);
ksplit.setRangeAutoUpper(0.0, numFirstVals, rangeExtFactor);

for (int i = 0; i < 1000; i++) {
	double d = (intrand(2) == 0) ? exponential(30) : normal(80, 10);
	hist.collect(d);
	psquare.collect(d);
	ksplit.collect(d);
}

FILE *f = fopen("pass1.txt", "w");
hist.saveToFile(f);
psquare.saveToFile(f);
ksplit.saveToFile(f);
fclose(f);

hist.clear();
hist.setStrategy(nullptr);

f = fopen("pass1.txt", "r");
hist.loadFromFile(f);
psquare.loadFromFile(f);
ksplit.loadFromFile(f);
fclose(f);

f = fopen("pass2.txt", "w");
hist.saveToFile(f);
psquare.saveToFile(f);
ksplit.saveToFile(f);
fclose(f);

%postrun-command: diff pass1.txt pass2.txt

%subst: /e\+0(\d\d)/e+\1/

%contains: pass1.txt
#
# (omnetpp::cHistogram) Test.Histogram
#
1000	 #= num_vals
0.0415294 217.004	 #= min, max
0	 #= weighted
55653.6	 #= sum
4.22383e+06	 #= sum_squared_vals
0	 #= underflow
0	 #= overflow
0	 #= neg_inf
0	 #= pos_inf
55	 #= num_bins
#= bin_edges
 0
 4
 8
 12
 16
 20
 24
 28
 32
 36
 40
 44
 48
 52
 56
 60
 64
 68
 72
 76
 80
 84
 88
 92
 96
 100
 104
 108
 112
 116
 120
 124
 128
 132
 136
 140
 144
 148
 152
 156
 160
 164
 168
 172
 176
 180
 184
 188
 192
 196
 200
 204
 208
 212
 216
 220
#= bin_values
 59
 46
 49
 53
 36
 36
 27
 17
 23
 20
 15
 12
 9
 10
 16
 20
 41
 62
 73
 93
 73
 75
 50
 28
 19
 13
 6
 3
 5
 2
 0
 4
 0
 0
 0
 1
 2
 1
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 1

#
# (omnetpp::cPSquare) Test.PSquare
#
1000	 #= num_vals
0.0415294 217.004	 #= min, max
0	 #= weighted
55653.6	 #= sum
4.22383e+06	 #= sum_squared_vals
10	 #= numbins
0	 #= numneginfs
0	 #= numposinfs
1000	 #= numobs
#= n[]
 0
 1
 101
 200
 300
 400
 500
 600
 700
 801
 900
 1000
#= q[]
 -1.79769e+308
 0.0415294
 7.66721
 15.1703
 26.9537
 50.6354
 68.315
 74.8863
 79.112
 84.5245
 92.1503
 217.004

#
# (omnetpp::cKSplit) Test.K-Split
#
1000	 #= num_vals
0.0415294 217.004	 #= min, max
0	 #= weighted
55653.6	 #= sum
4.22383e+06	 #= sum_squared_vals
1	 #= transformed
2	 #= range_mode
1.3	 #= range_ext_factor
0 303.542	 #= range
0 0	 #= cell_under, cell_over
0 0	 #= num_neg_infs, num_pos_infs
0 0	 #= sum_weights_underflow, sum_weights_overflow
0 0	 #= sum_weights_neg_inf, sum_weights_pos_inf
100	 #= num_firstvals
0	 #= firstvals[] exists
13	 #= num_cells
16	 #= gridv_size
11	 #= rootgrid
12	 #= lastgrid
1	 #= gridv_exists
# grid 1
11	 #= parent
0	 #= reldepth
999	 #= total
0	 #= mother
-2 -3	 #= cells[0], cells[1]
# grid 2
1	 #= parent
1	 #= reldepth
621	 #= total
0	 #= mother
-4 -6	 #= cells[0], cells[1]
# grid 3
1	 #= parent
1	 #= reldepth
378	 #= total
0	 #= mother
-5 13	 #= cells[0], cells[1]
# grid 4
2	 #= parent
2	 #= reldepth
356	 #= total
0	 #= mother
-8 -9	 #= cells[0], cells[1]
# grid 5
3	 #= parent
2	 #= reldepth
365	 #= total
0	 #= mother
-7 50	 #= cells[0], cells[1]
# grid 6
2	 #= parent
2	 #= reldepth
265	 #= total
23	 #= mother
53 -10	 #= cells[0], cells[1]
# grid 7
5	 #= parent
3	 #= reldepth
315	 #= total
40	 #= mother
-12 108	 #= cells[0], cells[1]
# grid 8
4	 #= parent
3	 #= reldepth
236	 #= total
40	 #= mother
106 90	 #= cells[0], cells[1]
# grid 9
4	 #= parent
3	 #= reldepth
120	 #= total
40	 #= mother
46 34	 #= cells[0], cells[1]
# grid 10
6	 #= parent
3	 #= reldepth
189	 #= total
40	 #= mother
43 106	 #= cells[0], cells[1]
# grid 11
0	 #= parent
-1	 #= reldepth
1000	 #= total
0	 #= mother
-1 1	 #= cells[0], cells[1]
# grid 12
7	 #= parent
4	 #= reldepth
167	 #= total
160	 #= mother
4 3	 #= cells[0], cells[1]

%contains: pass2.txt
#
# (omnetpp::cHistogram) Test.Histogram
#
1000	 #= num_vals
0.0415294 217.004	 #= min, max
0	 #= weighted
55653.6	 #= sum
4.22383e+06	 #= sum_squared_vals
0	 #= underflow
0	 #= overflow
0	 #= neg_inf
0	 #= pos_inf
55	 #= num_bins
#= bin_edges
 0
 4
 8
 12
 16
 20
 24
 28
 32
 36
 40
 44
 48
 52
 56
 60
 64
 68
 72
 76
 80
 84
 88
 92
 96
 100
 104
 108
 112
 116
 120
 124
 128
 132
 136
 140
 144
 148
 152
 156
 160
 164
 168
 172
 176
 180
 184
 188
 192
 196
 200
 204
 208
 212
 216
 220
#= bin_values
 59
 46
 49
 53
 36
 36
 27
 17
 23
 20
 15
 12
 9
 10
 16
 20
 41
 62
 73
 93
 73
 75
 50
 28
 19
 13
 6
 3
 5
 2
 0
 4
 0
 0
 0
 1
 2
 1
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 0
 1

#
# (omnetpp::cPSquare) Test.PSquare
#
1000	 #= num_vals
0.0415294 217.004	 #= min, max
0	 #= weighted
55653.6	 #= sum
4.22383e+06	 #= sum_squared_vals
10	 #= numbins
0	 #= numneginfs
0	 #= numposinfs
1000	 #= numobs
#= n[]
 0
 1
 101
 200
 300
 400
 500
 600
 700
 801
 900
 1000
#= q[]
 -1.79769e+308
 0.0415294
 7.66721
 15.1703
 26.9537
 50.6354
 68.315
 74.8863
 79.112
 84.5245
 92.1503
 217.004

#
# (omnetpp::cKSplit) Test.K-Split
#
1000	 #= num_vals
0.0415294 217.004	 #= min, max
0	 #= weighted
55653.6	 #= sum
4.22383e+06	 #= sum_squared_vals
1	 #= transformed
2	 #= range_mode
1.3	 #= range_ext_factor
0 303.542	 #= range
0 0	 #= cell_under, cell_over
0 0	 #= num_neg_infs, num_pos_infs
0 0	 #= sum_weights_underflow, sum_weights_overflow
0 0	 #= sum_weights_neg_inf, sum_weights_pos_inf
100	 #= num_firstvals
0	 #= firstvals[] exists
13	 #= num_cells
16	 #= gridv_size
11	 #= rootgrid
12	 #= lastgrid
1	 #= gridv_exists
# grid 1
11	 #= parent
0	 #= reldepth
999	 #= total
0	 #= mother
-2 -3	 #= cells[0], cells[1]
# grid 2
1	 #= parent
1	 #= reldepth
621	 #= total
0	 #= mother
-4 -6	 #= cells[0], cells[1]
# grid 3
1	 #= parent
1	 #= reldepth
378	 #= total
0	 #= mother
-5 13	 #= cells[0], cells[1]
# grid 4
2	 #= parent
2	 #= reldepth
356	 #= total
0	 #= mother
-8 -9	 #= cells[0], cells[1]
# grid 5
3	 #= parent
2	 #= reldepth
365	 #= total
0	 #= mother
-7 50	 #= cells[0], cells[1]
# grid 6
2	 #= parent
2	 #= reldepth
265	 #= total
23	 #= mother
53 -10	 #= cells[0], cells[1]
# grid 7
5	 #= parent
3	 #= reldepth
315	 #= total
40	 #= mother
-12 108	 #= cells[0], cells[1]
# grid 8
4	 #= parent
3	 #= reldepth
236	 #= total
40	 #= mother
106 90	 #= cells[0], cells[1]
# grid 9
4	 #= parent
3	 #= reldepth
120	 #= total
40	 #= mother
46 34	 #= cells[0], cells[1]
# grid 10
6	 #= parent
3	 #= reldepth
189	 #= total
40	 #= mother
43 106	 #= cells[0], cells[1]
# grid 11
0	 #= parent
-1	 #= reldepth
1000	 #= total
0	 #= mother
-1 1	 #= cells[0], cells[1]
# grid 12
7	 #= parent
4	 #= reldepth
167	 #= total
160	 #= mother
4 3	 #= cells[0], cells[1]
