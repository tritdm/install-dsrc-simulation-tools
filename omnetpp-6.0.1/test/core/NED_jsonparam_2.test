%description:
Test JSON-style object parameters.

%file: json.msg

namespace @TESTNAME@;

cplusplus {{ using namespace omnetpp; }}

class Data extends cOwnedObject
{
    int foo;
    string bar;
}

class DataVector extends cOwnedObject
{
    Data *data[] @owned;
}

class Messages extends cOwnedObject
{
    cMessage *msg @owned;
    cMessage *list[] @owned;
}

%file: test.ned

import testlib.Dump;

network Test {
  parameters:
    object a0 = omnetpp::cMessage { name : "hello", kind: 7 };
    object a1 = @TESTNAME@::Data { foo : 42, bar : "hello" };
    object a2 = @TESTNAME@::DataVector {
                  data : [
                    @TESTNAME@::Data { foo : 42, bar : "hello" },
                    @TESTNAME@::Data { foo : 99, bar : "world" }
                  ]
                };
    object a3 = @TESTNAME@::Messages {
                  msg : omnetpp::cMessage { name : "hello" }
                };
    object a4 = @TESTNAME@::Messages {
                  list : [
                    omnetpp::cMessage { name : "hello" },
                    omnetpp::cMessage { name : "world" }
                  ]
                };

  submodules:
    dump: Dump;
}

%contains: stdout
module Test: Test {
    parameters:
        @isNetwork
        a0 = (omnetpp::cMessage)hello: (new msg)
        a1 = (NED_jsonparam_2::Data)obj2:
        a2 = (NED_jsonparam_2::DataVector)obj3:
        a3 = (NED_jsonparam_2::Messages)obj6:
        a4 = (NED_jsonparam_2::Messages)obj8:
    submodules:
}

%not-contains: stdout
undisposed object
