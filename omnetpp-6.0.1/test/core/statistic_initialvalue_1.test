%description:
Test that the count and sum filters record the initial values.

%file: test.ned

simple Test
{
    @isNetwork(true);
    @signal[foo](type=int);
    @statistic[foo](source=foo;record=vector(count),vector(sum));
}

%file: test.cc

#include <omnetpp.h>

using namespace omnetpp;

namespace @TESTNAME@ {

class Test : public cSimpleModule
{
  public:
    Test() : cSimpleModule(16384) { }
    virtual void activity() override;
};

Define_Module(Test);

void Test::activity()
{
    simsignal_t signal = registerSignal("foo");
    while(true) {
        emit(signal, 99);
        wait(0.1);
    }
}

}; //namespace

%inifile: test.ini
warmup-period = 0.8s
sim-time-limit = 2s

%contains: results/General-#0.vec
vector 0 Test foo:vector(count) ETV
attr recordingmode vector(count)
attr source foo
vector 1 Test foo:vector(sum) ETV
attr recordingmode vector(sum)
attr source foo
0	0	0.8	0
0	9	0.8	1
0	10	0.9	2
0	11	1	3
0	12	1.1	4
0	13	1.2	5
0	14	1.3	6
0	15	1.4	7
0	16	1.5	8
0	17	1.6	9
0	18	1.7	10
0	19	1.8	11
0	20	1.9	12
0	21	2	13
1	0	0.8	0
1	9	0.8	99
1	10	0.9	198
1	11	1	297
1	12	1.1	396
1	13	1.2	495
1	14	1.3	594
1	15	1.4	693
1	16	1.5	792
1	17	1.6	891
1	18	1.7	990
1	19	1.8	1089
1	20	1.9	1188
1	21	2	1287

