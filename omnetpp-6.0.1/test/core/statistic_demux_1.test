%description:
Test the "demux" filter

%file: test.ned

simple Node
{
    @signal[foo];
    @statistic[foo1](source=foo;record=count(demux),sum(demux));
    @statistic[foo2](source=demux(foo);record=count,sum);
}

network Test
{
    submodules:
        node: Node;
}

%file: test.cc

#include <omnetpp.h>

using namespace omnetpp;

namespace @TESTNAME@ {

class Node : public cSimpleModule {
    virtual void initialize() override;
};

void Node::initialize()
{
    simsignal_t fooSignal = registerSignal("foo");
    cNamedObject unnamed;
    cNamedObject first("first");
    cNamedObject second("second");
    cNamedObject third("third");

    emit(fooSignal, 1);
    emit(fooSignal, 10, nullptr);
    emit(fooSignal, 100, &unnamed); // an unnamed details object (name="") is recorded together with details=nullptr
    emit(fooSignal, 1000, &first);
    emit(fooSignal, 10000, &second);
    emit(fooSignal, 100000, &third);
    emit(fooSignal, 100000, &third);
    emit(fooSignal, 100000, &third);
    emit(fooSignal, 100000, &third);
    emit(fooSignal, 10000, &second);
    emit(fooSignal, 10000, &second);
    emit(fooSignal, 1000, &first);
    emit(fooSignal, 100, &unnamed);
};

Define_Module(Node);

}; //namespace

%contains: results/General-#0.sca
scalar Test.node foo1:count(demux) 4
attr recordingmode count(demux)
attr source foo
scalar Test.node first:foo1:count(demux) 2
attr recordingmode count(demux)
attr source foo
scalar Test.node second:foo1:count(demux) 3
attr recordingmode count(demux)
attr source foo
scalar Test.node third:foo1:count(demux) 4
attr recordingmode count(demux)
attr source foo
scalar Test.node foo1:sum(demux) 211
attr recordingmode sum(demux)
attr source foo
scalar Test.node first:foo1:sum(demux) 2000
attr recordingmode sum(demux)
attr source foo
scalar Test.node second:foo1:sum(demux) 30000
attr recordingmode sum(demux)
attr source foo
scalar Test.node third:foo1:sum(demux) 400000
attr recordingmode sum(demux)
attr source foo
scalar Test.node foo2:count 4
attr recordingmode count
attr source demux(foo)
scalar Test.node foo2:sum 211
attr recordingmode sum
attr source demux(foo)
scalar Test.node first:foo2:count 2
attr recordingmode count
attr source demux(foo)
scalar Test.node first:foo2:sum 2000
attr recordingmode sum
attr source demux(foo)
scalar Test.node second:foo2:count 3
attr recordingmode count
attr source demux(foo)
scalar Test.node second:foo2:sum 30000
attr recordingmode sum
attr source demux(foo)
scalar Test.node third:foo2:count 4
attr recordingmode count
attr source demux(foo)
scalar Test.node third:foo2:sum 400000
attr recordingmode sum
attr source demux(foo)
