%description:
Basic test for lifecycle listeners.

%includes:
#include "../lib/testutil.h"

%global:

namespace {
class LocalLifecycleListener : public cISimulationLifecycleListener {
    virtual void lifecycleEvent(SimulationLifecycleEventType eventType, cObject *details) override {
      std::cout << "Received lifecycle event " << getSimulationLifecycleEventName(eventType) << std::endl;
    }
} listener;
}

EXECUTE_ON_STARTUP(
    if (testlib::isRunningTest("@TESTNAME@"))
        cSimulation::getActiveEnvir()->addLifecycleListener(&listener)
);


%subst: /Assigned runID=.*/Assigned runID=xxx/
%activity:
wait(1.0);

%contains: stdout
Received lifecycle event ON_STARTUP

Preparing for running configuration General, run #0...
Assigned runID=xxx
Setting up network "Test"...
Received lifecycle event PRE_NETWORK_SETUP
Received lifecycle event POST_NETWORK_SETUP
Initializing...
Received lifecycle event PRE_NETWORK_INITIALIZE
Initializing module Test, stage 0
Received lifecycle event POST_NETWORK_INITIALIZE

Running simulation...
Received lifecycle event ON_SIMULATION_START
** Event #1  t=0   Test (Test, id=1)
** Event #2  t=1   Test (Test, id=1)

<!> No more events, simulation completed -- at t=1s, event #2

Calling finish() at end of Run #0...
Received lifecycle event PRE_NETWORK_FINISH
Received lifecycle event POST_NETWORK_FINISH
Received lifecycle event ON_SIMULATION_SUCCESS
Received lifecycle event ON_RUN_END
Received lifecycle event PRE_NETWORK_DELETE
Received lifecycle event POST_NETWORK_DELETE
Received lifecycle event ON_SHUTDOWN

