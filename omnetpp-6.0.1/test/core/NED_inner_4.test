%description:

Test parameter references in expressions inside an inner type.

%file: test.ned

import testlib.Dump;

network Test
{
    parameters:
        int foo = 1;
        int bar = 2;
        int foobar = 3;
    types:
        module Node {
          parameters:
            int local = parent.foo;
            int bar = parent.bar;
            int third = local;
            int foobar = 99;
            int foobar2 = this.foobar;
          gates:
            output out @loose;
            input in @loose;
          connections allowunconnected:
        }
        module BoxedNode {
          parameters:
            int foo = 4;
            int bar = 5;
            int foobar = 6;
          submodules:
            node: Node;
        }
        channel X extends ned.DelayChannel {
          parameters:
            int local = parent.foo;
            int bar = parent.bar;
            int third = local;
            int foobar = 99;
            int foobar2 = this.foobar;
        }
    submodules:
        node: Node;
        boxedNode: BoxedNode;
        dump: Dump;
    connections:
        node.out --> X --> node.in;
}

%inifile: test.ini
[General]
network = Test
cmdenv-express-mode = false

%contains: stdout
module Test: Test {
    parameters:
        @isNetwork
        foo = 1
        bar = 2
        foobar = 3
    submodules:
        module Test.node: Test.Node {
            parameters:
                local = 1
                bar = 2
                third = 1
                foobar = 99
                foobar2 = 99
            gates:
                out @loose: --> node.in, (Test.X)channel disabled=false delay=0s local=1 bar=2 third=1 foobar=99 foobar2=99
                in @loose: <-- node.out, (Test.X)channel disabled=false delay=0s local=1 bar=2 third=1 foobar=99 foobar2=99
        }
        module Test.boxedNode: Test.BoxedNode {
            parameters:
                foo = 4
                bar = 5
                foobar = 6
            submodules:
                module Test.boxedNode.node: Test.Node {
                    parameters:
                        local = 4
                        bar = 5
                        third = 4
                        foobar = 99
                        foobar2 = 99
                    gates:
                        out @loose: not connected
                        in @loose: not connected
                }
        }
}

