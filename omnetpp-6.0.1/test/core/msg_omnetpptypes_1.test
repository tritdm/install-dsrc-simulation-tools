%description:
Test that omnetpp types can be referenced with/without the
"omnetpp::" type prefix, and the generated code compiles, and contains
type references in the correct form regarding namespace.

%file: test.msg

namespace @TESTNAME@;

class A extends cObject {
  cMessage msg;
  cMessage *pmsg;
  omnetpp::cMessage qmsg;
  omnetpp::cMessage *pqmsg;
}

%includes:
#include "test_m.h"

%activity:
EV << "OK\n";

%contains: test_m.h
class A : public ::omnetpp::cObject

%contains: test_m.h
    ::omnetpp::cMessage msg;
    ::omnetpp::cMessage * pmsg = nullptr;
    ::omnetpp::cMessage qmsg;
    ::omnetpp::cMessage * pqmsg = nullptr;

%subst: / { return.*/;/

%contains: test_m.h
    virtual const ::omnetpp::cMessage& getMsg() const;
    virtual ::omnetpp::cMessage& getMsgForUpdate();
    virtual void setMsg(const ::omnetpp::cMessage& msg);

    virtual const ::omnetpp::cMessage * getPmsg() const;
    virtual ::omnetpp::cMessage * getPmsgForUpdate();
    virtual void setPmsg(::omnetpp::cMessage * pmsg);

    virtual const ::omnetpp::cMessage& getQmsg() const;
    virtual ::omnetpp::cMessage& getQmsgForUpdate();
    virtual void setQmsg(const ::omnetpp::cMessage& qmsg);

    virtual const ::omnetpp::cMessage * getPqmsg() const;
    virtual ::omnetpp::cMessage * getPqmsgForUpdate();
    virtual void setPqmsg(::omnetpp::cMessage * pqmsg);

