#!/bin/sh
#
# Detects the platform and architecture, and starts the IDE with the right launcher
#
IDEDIR=$(dirname $0)/../ide
PLATFORM=$(uname -sm)
LAUNCHER=opp_ide
if [ -z "${PRODUCT}" ]; then
  PRODUCT='OMNeT++'
fi

if [ "$(cd $(dirname $0)/.. && pwd)" != "$__omnetpp_root_dir" ]; then
  # source the setenv script if no environment is present or a the current environment is not pointing
  # to the directory we are present. (MUST be sourced from the installation root)
  cd $(dirname $0)/.. ; . ./setenv ; cd - >/dev/null
fi

if test ! -d $IDEDIR/configuration -a ! -d $IDEDIR/$LAUNCHER.app/Contents/Eclipse/configuration; then
  echo "The $PRODUCT IDE is not installed!"
  exit 1;
fi

echo Starting the $PRODUCT IDE...

#set default language so GCC will report errors in english. see bug #3
export LANG=en_US.UTF-8
# arguments needed to initially correctly show the default 'samples' workspace
DEFAULT_WORKSPACE_ARGS="-vmargs -Dosgi.instance.area.default=$IDEDIR/../samples"

case $PLATFORM in
*MINGW*)
	$IDEDIR/${LAUNCHER}.exe --launcher.openFile "$@" $DEFAULT_WORKSPACE_ARGS 2>$IDEDIR/error.log &
        ;;
*Linux*)
	$IDEDIR/${LAUNCHER} --launcher.openFile "$@" $DEFAULT_WORKSPACE_ARGS 2>$IDEDIR/error.log &
        ;;
*Darwin*)
	# remove the quarantine extended bit so the IDE will not be copied to a private dir on macOS sierra and later
	xattr -d com.apple.quarantine $IDEDIR/${LAUNCHER}.app 2>/dev/null
	# starting the executable directly allows to avoid unsigned app warnings showing up
	$IDEDIR/${LAUNCHER}.app/Contents/MacOS/${LAUNCHER} --launcher.openFile "$@" $DEFAULT_WORKSPACE_ARGS 2>$IDEDIR/error.log &
        ;;
*)
	echo $PRODUCT IDE is supported only on: Linux, Windows and macOS
	exit 1
        ;;
esac
