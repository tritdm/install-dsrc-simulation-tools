[General]
network = Network
record-eventlog = true

**.scalar-recording = false
**.vector-recording = false

**.phy*.tx.typename = "Tx"
**.phy*.tx.bitrate = 1Mbps
**.source.length = intuniform(1000b,1100b)  # 1ms-1.1ms
**.source.interval = 1.11ms + exponential(0.20ms)  # wait at least until the transmission of the previous packet goes through

[StandardEnd]
**.phy*.rx.typename = "RxAtEnd"
**.phy*.tx.queueingEnabled = true

[StandardEndWithPreemption]
**.phy*.rx.typename = "RxAtEnd"
*.source.source.interval = 0.3ms*intuniform(1,4) # exponential(1ms)  # frequently overlapping packets (new pk causes aborting the current transmission)
*.source.phy.tx.preemptionEnabled = true
**.phy*.tx.queueingEnabled = true

[StandardStart]
**.phy*.rx.typename = "RxAtStart"
**.phy*.tx.queueingEnabled = true

[StandardStartWithPreemption]
**.phy*.rx.typename = "RxAtStart"
*.source.source.interval = 0.5ms*intuniform(1,4) # exponential(1ms)  # frequently overlapping packets (new pk causes aborting the current transmission)
*.source.phy.tx.preemptionEnabled = true
*.switch.phy2.tx.queueingEnabled = true

[StandardStartWithCutthrough]
**.phy*.rx.typename = "RxAtStart"
*.switch.**.cutthrough = true
*.switch.phy1.rx.cutthroughLatency = 0.2ms

[StandardStartWithPreemptionAndCutthrough]
**.phy*.rx.typename = "RxAtStart"
*.source.source.interval = 0.5ms*intuniform(1,4) # exponential(1ms)  # frequently overlapping packets (new pk causes aborting the current transmission)
*.source.phy.tx.preemptionEnabled = true
*.switch.phy2.tx.queueingEnabled = true
*.switch.**.cutthrough = true
*.switch.phy1.rx.cutthroughLatency = 0.2ms
